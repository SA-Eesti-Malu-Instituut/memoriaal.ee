extends /_templates/baas_layout.pug


block content
    #search.col-12
        h3.mb-3= self.search.title
        form.form(id='searchform', action='/baas/', method='GET')
            input.col-8.col-md-6.col-xl-4(type='search', name='q', placeholder=self.search.placeholder)
            .form-check.col-12.my-2
                input.form-check-input(type='radio', id='filter_'+self.search.radio.all, name='f', value='all')
                label.form-check-label(for='filter_'+self.search.radio.all)= self.search.radio.all
            .form-check.col-12.my-2
                input.form-check-input(type='radio', id='filter_'+self.search.radio.wall, name='f', value='wall')
                label.form-check-label(for='filter_'+self.search.radio.wall)= self.search.radio.wall
            .form-check.col-12.my-2
                input.form-check-input(type='radio', id='filter_'+self.search.radio.officers, name='f', value='officers')
                label.form-check-label(for='filter_'+self.search.radio.officers)= self.search.radio.officers
            button.col-4.col-md-3.col-xl-2= self.search.button
        p#search-count.mt-2.mb-4
        #search-results

    #popup-background.d-none
    #popup-content.p-3.d-none
        .row
            h2#db-feedback-title.col-12= self.feedback.title
            #db-feedback-text.col-12.col-md-10.offset-md-1
                +markdown(self.feedback.text)

            form#db-feedback.col-12.col-md-8.offset-md-2(name='db-feedback', method='POST', netlify-honeypot='fax', netlify)
                input#db-feedback-id(type='hidden', name='id')
                input#db-feedback-url(type='hidden', name='url')
                input#db-feedback-name(type='hidden', name='name')
                input#db-feedback-fax.d-none(type='tel', name='fax')
                .form-group.mt-5
                    label.form-label.col-12.px-0(for='db-feedback-email')= self.feedback.email
                    input#db-feedback-email.col-12.px-0(type='email', name='contact-email')
                .form-group.mt-5
                    label.form-label.col-12.px-0(for='db-feedback-phone')= self.feedback.phone
                    input#db-feedback-phone.col-12.px-0(type='tel', name='contact-phone')
                .form-group.mt-5
                    label.form-label.col-12.px-0(for='db-feedback-feedback')= self.feedback.feedback
                    textarea#db-feedback-feedback.col-12.px-0(name='feedback', rows=5)
                .form-group.mt-5.text-right
                    button#db-feedback-cancel.btn.btn-secondary= self.feedback.cancel
                    button#db-feedback-submit.btn.btn-primary.ml-3(type='submit')= self.feedback.submit

            h2#db-feedback-success.col-12.d-none= self.feedback.success


block script
    script.
        $(function () {
            var qs = function (key) {
                key = key.replace(/[*+?^$.\[\]{}()|\\\/]/g, "\\$&")
                var match = location.search.match(new RegExp("[?&]"+key+"=([^&]+)(&|$)"))
                return match && decodeURIComponent(match[1].replace(/\+/g, " "))
            }

            var query = qs('q')
            var filter = qs('f') || 'all'
            var idQuery = (query == Number(query) && query.length === 10)

            if (idQuery) {
                filter = 'all'
                //- $('input[type="radio"]').prop('disabled', true)
            }

            $('input[value="'+filter+'"]').prop('checked', true)

            if (query) {
                $('input[name="q"]').val(query)

                var qData = {
                    query : {
                        bool : {
                            must : {
                                multi_match : {
                                    query: query,
                                    fields: [ 'perenimi', 'eesnimi', 's端nd', 'surm', 'id', 'pereseosID', 'kirjed.kirje' ],
                                    operator: 'and',
                                    type: 'cross_fields'
                                }
                            }
                        }
                    },
                    sort: { 'eesnimi.raw': 'asc', 'perenimi.raw': 'asc' },
                    _source: [
                        'isperson', 'kivi', 'emem', 'evo', 'wwiiref', 'evokirje',
                        'perenimi', 'eesnimi', 'isanimi', 'emanimi', 'perenimed', 'eesnimed',
                        's端nd', 'surm', 'id',
                        'kirjed.kirje', 'kirjed.kirjekood', 'kirjed.viide', 'kirjed.allikas', 'kirjed.allika_nimetus',
                        'pereseosed.persoon', 'pereseosed.kirje',
                        'pereseosed.kirjekood', 'pereseosed.allikas', 'pereseosed.raamatupere',
                        'tahvlikirje.kirjekood', 'tahvlikirje.kirje', 'tahvlikirje.tahvel', 'tahvlikirje.tulp', 'tahvlikirje.rida'
                    ]
                }

                if (idQuery) {
                    filter = 'all'
                    qData['query']['bool']['must']['multi_match']['fields'] = ['id']
                } else if (filter === 'wall') {
                    qData['query']['bool']['filter'] = { term: { kivi: 1 } }
                } else if (filter === 'officers') {
                    qData['query']['bool']['filter'] = { term: { evo: 1 } }
                } else if (filter === 'refugees') {
                    qData['query']['bool']['filter'] = { term: { wwiiref: 1 } }
                }
                $.ajax('/.netlify/functions/search', {
                    data : JSON.stringify(qData),
                    contentType : 'application/json',
                    type : 'POST',
                    cache: false,
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader('Authorization', 'Basic cmVhZGVyOnJlYWRlcg==')
                    },
                    success: function (data) {
                        $('#search-count').html(data.hits.total + (data.hits.total === 1 ? ' #{self.result.count.one}' : ' #{self.result.count.multiple}'))

                        for (var i = 0; i < data.hits.hits.length; i++) {
                            var text = []
                            var p = data.hits.hits[i]._source

                            //- console.log(JSON.stringify(p, 0, 2))

                            let c3class = (p.emem === 1 ? 'relevantne' : 'mitterelevantne')
                            if (p.isperson === 0) { c3class = 'nonperson' }

                            text.push('<div id="' + p.id + '" class="search-result pt-2 pb-4 ' + c3class + '">')
                            text.push('<div class="labels">')
                            if (p.emem) { text.push('<span class="label">emem</span>') }
                            if (p.evo) { text.push('<span class="label">evo</span>') }
                            if (p.wwiiref) { text.push('<span class="label">wwiiref</span>') }
                            text.push('</span>')
                            text.push('<div class="row">')

                            text.push('<h3 class="search-result-name col-12 mb-2 mb-1">' + (p.eesnimi ? p.eesnimi : '') + ' ' + p.perenimi + '</h3>')

                            text.push('<div class="col-5 col-sm-3">')
                            if (p.s端nd) { text.push('<p class="mb-0">#{self.result.born}: ' + p.s端nd + '</p>') }
                            if (p.surm) { text.push('<p class="mb-0">#{self.result.dead}: ' + p.surm + '</p>') }
                            if (p.isanimi) { text.push('<p class="mb-0">#{self.result.father}: ' + p.isanimi + '</p>') }
                            if (p.emanimi) { text.push('<p class="mb-0">#{self.result.mother}: ' + p.emanimi + '</p>') }
                            text.push('<p class="mb-0"># ' + p.id + '</p>')
                            text.push('</div>')

                            text.push('<div class="search-result-info col-7 col-sm-6">')
                            p.kirjed = p.kirjed || []
                            for (var ik = 0; ik < p.kirjed.length; ik++) {
                                text.push('<p class="mt-2 mb-0"><strong>' + p.kirjed[ik].allikas + ':</strong></p>')
                                if (p.kirjed[ik].kirje) { text.push('<p class="mb-1">') }
                                if (p.kirjed[ik].kirje) { text.push(p.kirjed[ik].kirje) }
                                if (p.kirjed[ik].kirje) { text.push('</p>') }
                            }
                            if (p.pereseosed && p.pereseosed.length > 0) {
                                let pered = {}
                                for (var ip = 0; ip < p.pereseosed.length; ip++) {
                                    let pereseos = p.pereseosed[ip]
                                    //- console.log('PERESEOS:', pereseos)
                                    if(!pered.hasOwnProperty(pereseos.raamatupere)) {
                                        pered[pereseos.raamatupere] = []
                                    }
                                    pered[pereseos.raamatupere].push({
                                        kirjekood: pereseos.kirjekood,
                                        kirje: pereseos.kirje
                                    })
                                }
                                for (const [perekood, pere] of Object.entries(pered)) {
                                    //- console.log(perekood, pere)
                                    text.push('<hr class="my-3">')
                                    text.push('<p class="my-0"><strong>' + perekood + ' (#{self.result.family}):</strong></p>')
                                    for (const pereliige of pere) {
                                        text.push('<p class="mb-1">- ')
                                        text.push(pereliige.kirjekood + ': ' + pereliige.kirje)
                                        text.push('</p>')
                                    }
                                }
                            }
                            text.push('</div>')

                            if (p.tahvlikirje) {
                                text.push('<div class="search-result-plaque col-12 col-sm-3">')
                                if (p.tahvlikirje.tahvel) {
                                    text.push('<p class="mb-0">#{self.result.plaque}:</p>')
                                    text.push('<p class="mb-2 plaque-info">' + p.tahvlikirje.tahvel + '</p>')
                                }
                                if (p.tahvlikirje.tulp) { text.push('<p class="mb-2">#{self.result.col}: ' + p.tahvlikirje.tulp + ' / #{self.result.row}: ' + p.tahvlikirje.rida + '</p>') }
                                if (p.tahvlikirje.kirje) {
                                    text.push('<p class="mb-0">#{self.result.nameOnPlaque}: ' + p.tahvlikirje.kirje + '</p>')
                                }
                            }

                            if (p.evo === 1) {
                                text.push('<hr/><p class="mb-0">#{self.result.nameOnEVOPlaque}: ' + p.evokirje + '</p>')
                            }
                            text.push('</div>')
                            text.push('</div>')
                            text.push('</div>')

                            $('#search-results').append(text.join(''))
                        }
                    },
                    error: function( error) {
                        console.log(error)
                    }
                })
            }

            $('input[type="radio"]').on('click', function () {
                query = $('input[name="q"]').val()
                idQuery = (query == Number(query) && query.length === 10)
                if (idQuery) {
                    $('input[value="all"]').prop('checked', true)
                    return
                }
                if ($(query && $(this).prop('value')) !== filter) {
                    $('#searchform').submit()
                }
            })
            //- $('#search-results').on('mouseenter', '.search-result', function () {
            //-     $(this).find('.search-result-feedback').removeClass('d-none')
            //- })

            //- $('#search-results').on('mouseleave', '.search-result', function () {
            //-     $(this).find('.search-result-feedback').addClass('d-none')
            //- })

            $('#search-results').on('click', '.search-result-feedback', function () {
                var id = $(this).data('id')
                var name = $(this).data('name')

                $('#db-feedback-id').val(id)
                $('#db-feedback-url').val('http://baas.memoriaal.ee/#' + id)
                $('#db-feedback-name').val(name)
                $('#db-feedback-title').html('#{ self.feedback.title }'.replace('%name%', name))

                $('#db-feedback-title, #db-feedback-text, #db-feedback').removeClass('d-none')
                $('#db-feedback-success').addClass('d-none')
                $('#popup-background, #popup-content').removeClass('d-none')
            })

            $('#db-feedback').submit(function (e) {
                e.preventDefault()

                var $form = $(this)

                $.post($form.attr('action'), $form.serialize(), function (data) {
                    console.log(data)

                    $('#db-feedback-title, #db-feedback-text, #db-feedback').addClass('d-none')
                    $('#db-feedback-success').removeClass('d-none')

                    $('#db-feedback input, #db-feedback textarea').val('')
                    $('#db-feedback-title').html('')

                    setTimeout(function () {
                        $('#popup-background, #popup-content').addClass('d-none')
                    }, 4000)
                })
            })

            $('#db-feedback-cancel').click(function (e) {
                e.preventDefault()

                $('#db-feedback input, #db-feedback textarea').val('')
                $('#db-feedback-title').html('')

                $('#popup-background, #popup-content').addClass('d-none')
            })
        })
